pipeline {
    agent any
    
    environment {
        registryBack = "justelyes/achat-back"
        }

    stages {
        stage("Clone code from GitHub") {
            steps {
                script {
                    git branch: 'Elyes', credentialsId: 'Git_cred', url: 'https://github.com/Elyes44/achat_deploy.git'
                }
            }
        }

        stage("Maven Build and Test") {
            steps {
                dir('backend/achat') {
                    sh 'mvn test'
                    sh 'mvn clean install'
                }
            }
        }

        stage('SonarQube analysis Spring Boot') {
            steps {
                dir('backend/achat') {
                    withSonarQubeEnv('sonarq') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('Building a Docker Image') {
            steps {
                script {
                    dir('backend/achat') {
                        def dockerImage = docker.build "${registryBack}:latest"
                        
                    }
                }
            }
        }

  stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    // Use the Docker Hub credentials stored in Jenkins
                    withDockerRegistry([credentialsId: 'docker_credss', url: 'https://index.docker.io/v1/']) {
                        // Push the Docker image to Docker Hub
                        sh "docker push ${registryBack}:latest"
                    }
                }
            }
        }

        stage('Nexus Deploy') {
            steps {
                script {
                    dir('backend/achat') {
                        withCredentials([usernamePassword(credentialsId: 'nexus_creds', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                            withMaven(
                                globalMavenSettingsConfig: '',
                                jdk: 'JAVA_HOME',
                                maven: 'M2_HOME',
                                mavenSettingsConfig: '',
                                mavenSettingsFilePath: '/usr/share/maven/conf/settings.xml',
                                publisherStrategy: 'EXPLICIT',
                                traceability: true
                            ) {
                                sh "mvn deploy -Dusername=${NEXUS_USERNAME} -Dpassword=${NEXUS_PASSWORD}"
                            }
                        }
                    }
                }
            }
        }
    }
}
